<Window x:Class="MandelbrotSet.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MandelbrotSet"
        mc:Ignorable="d"
        Title="Mandelbrot Set" Height="550" Width="800">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <local:DoubleConverter x:Key="DoubleConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" MinWidth="200"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*" MinWidth="200"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0" Margin="10,0">
            <StackPanel.Resources>
                <Style TargetType="{x:Type TextBlock}" x:Key="Label">
                    <Setter Property="Margin" Value="0,20,0,5"/>
                </Style>
                <Style TargetType="{x:Type FrameworkElement}" x:Key="Property">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0,5"/>
                </Style>
                <Style TargetType="Label" x:Key="PropertyLabel">
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                    <Setter Property="Width" Value="70"/>
                </Style>
                <Style TargetType="{x:Type TextBox}" x:Key="Input">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Height" Value="20"/>
                </Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="0,5"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="Height" Value="30"/>
                </Style>
                <Style TargetType="{x:Type ProgressBar}">
                    <Setter Property="Margin" Value="0,0,0,10"/>
                    <Setter Property="Height" Value="10"/>
                </Style>
            </StackPanel.Resources>
            <!-- param of Z_n+1 = z_n ^ 2 + c -->
            <TextBlock Text="[ Z_n+1 = z_n ^ 2 + c ]:" Style="{StaticResource Label}"/>
            <DockPanel Style="{StaticResource Property}" LastChildFill="True">
                <Label DockPanel.Dock="Left" Content="n:" Style="{StaticResource PropertyLabel}"/>
                <TextBox Text="{Binding Controller.N, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource Input}"/>
            </DockPanel>
            <DockPanel  Style="{StaticResource Property}" LastChildFill="True">
                <Label DockPanel.Dock="Left" Content="Threshold:" Style="{StaticResource PropertyLabel}"/>
                <TextBox Text="{Binding Controller.Threshold, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource Input}"/>
            </DockPanel>
            <!-- Center point -->
            <TextBlock Text="Centre point:" Style="{StaticResource Label}"/>
            <Grid Style="{StaticResource Property}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="( "/>
                <TextBox   Grid.Column="1" Text="{Binding Controller.X, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleConverter}}" Style="{StaticResource Input}" />
                <TextBlock Grid.Column="2" Text=", "/>
                <TextBox   Grid.Column="3" Text="{Binding Controller.Y, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleConverter}}" Style="{StaticResource Input}" />
                <TextBlock Grid.Column="4" Text=" )"/>
            </Grid>
            <CheckBox IsChecked="{Binding Controller.ShowAxes}" Content="Show axes" Margin="10"/>
            <!-- Canvas size -->
            <TextBlock Text="Canvas size:" Style="{StaticResource Label}"/>
            <Grid Style="{StaticResource Property}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="( "/>
                <TextBox   Grid.Column="1" Text="{Binding Controller.W, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleConverter}}" Style="{StaticResource Input}" />
                <TextBlock Grid.Column="2" Text=", "/>
                <TextBox   Grid.Column="3" Text="{Binding Controller.H, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleConverter}}" Style="{StaticResource Input}" />
                <TextBlock Grid.Column="4" Text=" )"/>
            </Grid>
            <CheckBox IsChecked="{Binding Controller.FixedAspect}" Content="1:1 Aspect ratio" Margin="10"/>
            <!-- Performance -->
            <TextBlock Text="Performance:" Style="{StaticResource Label}"/>
            <DockPanel Style="{StaticResource Property}" LastChildFill="True">
                <Label DockPanel.Dock="Left" Content="Core num:" Style="{StaticResource PropertyLabel}"/>
                <TextBox Text="{Binding Controller.CoreNum, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource Input}"/>
            </DockPanel>
            <!-- Refresh button / progress -->
            <Button Content="Reset" Command="{Binding Controller.ResetCommand}"/>
            <ProgressBar Value="{Binding Controller.Progress.RenderingProgress, Mode=OneWay}" Visibility="{Binding Controller.Progress.ShowRenderingProgress, Converter={StaticResource BoolToVisibility}}"/>
            <!-- Save button / progress -->
            <Button Content="Save" Command="{Binding Controller.SaveCommand}"/>
            <ProgressBar Value="{Binding Controller.Progress.SavingProgress, Mode=OneWay}" Visibility="{Binding Controller.Progress.ShowSavingProgress, Converter={StaticResource BoolToVisibility}}"/>
        </StackPanel>
        
        <!-- Splitter -->
        <GridSplitter x:Name="splitter" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" />

        <!-- Image -->
        <Image Grid.Column="2" Grid.Row="0" Name="image" Source="{Binding Controller.Image}" Stretch="Fill" />
        
        <!-- Bottom info bar -->
        <TextBlock Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Margin="5,0" Text="{Binding Controller.Information.InfoString}"/>
    </Grid>
</Window>
